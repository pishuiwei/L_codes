1、在设计线程安全类的过程中，需要包含以下三个基本要素
	找出构成对象状态的所有变量；
	找出约束状态变量的不变性条件；
	建立对象状态的并发访问管理策略。
	
2、同步策略
	定义了如何在不违背不变条件或后验条件的情况下对其状态的访问操作进行协调。
	
3、状态空间
	所有可能的取值。
	
4、依赖状态的操作
	如果在某个操作中包含基于状态的先验条件，那么这个操作就被称为依赖状态的操作。
	
5、所有权
	所有权意味着控制权。
	在Java中并没有得到充分的体现， 而是属于类设计中的一个要素。
	如果发布看某个可变对象的引用，那么就不在拥有独占的控制权，最对是“共享控制权”。
	
6、所有权分离

7、实例封闭
	当一个对象被封装到另一个对象中时，能访问被封装对象的所有代码路径都是已知的。
	将数据封装在对象内部，可以将数据的访问限制在对象的方法上，从而更容易确保线程在访问数据是总是能持有正确的锁。
	
8、私有锁
	private final Object myLock = new Object();
	
9、独立的状态变量
	组合而成的类并不会再其包含的多个状态变量上增加任何不变性条件。
	
10、
	如果一个类是由多个独立且线程安全的状态变量组成。并且在所有的操作中都不包含无效状态的转换，那么可以将线程安全
	性委托给底层的状态变量。
	
11、
	如果一个状态变量时线程安全的，并且没哟任何不变性条件来约束它的值，在变量的操作上也不存在任何不允许的状态转换，
	那么就可以安全地发布这个变量。
	
12、委托
	委托是穿点线程安全类的一个最有效的策略：只需要让现有的线程安全类管理所有的状态即可。
	
	
	
	