1、Java语言规范要求JVM在线程中维护一种类似串行的语义：重要程序的最终结果与在严格串行环境中执行的结果相同，
    那么上述所有操作都是允许的。

2、JMM规定了JVM必须遵循一组最下保证，这组保证规定了对变量的写入操作在任何将对于其他线程可见。

3、各种使操作延迟或者看似乱序执行的不同原因，都可以归为重排序。

4、Happens-Before
   JMM为程序中所有的操作定义了一个偏序关系，称之为Happens-Before。

   规则包括：
    程序规则：
        如果程序中操作A在操作B之前，那么在线程中A操作将在B操作之前执行。
    监视器锁规则：
        在监视器锁上的解锁操作必须在同一个监视器锁上的叫锁操作之前执行。
    volatile变量规则：
        对volatile变量的写人操作必须在对改变量的读操作之前执行。
    线程启动规则：
        在线程上对Thread.start的调用必须在该线程中执行任何操作之前执行。
    线程结束规则：
        线程中的任何操作都必须在其他线程检测到该线程已经结束之前执行，或者从Thread.join中成功返回，
        或者在调用Thread.isAlive时返回false。
    中断规则：
        当一个线程在另一个线程上调用interrupt时，必须自被中断线程检测到interrupt调用之前执行（通过
        抛出InterruptedException，或者调用isInterrupted和interrupted）。
    终结器规则：
        对象的构造函数必须在启动该对象的终结器之前执行完成。
    传递性：
        如果操作A在操作B之前执行，并且操作B在操作C之前执行，那么操作A必须在操作C之前执行。