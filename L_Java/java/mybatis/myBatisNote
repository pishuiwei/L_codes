一、使SqlSession
	1、配置myBatis配置文件
	2、配置mapper文件
	3、使用Resources获取配置文件
	4、使用SqlSessionFactoryBuilder构建SqlSessionFactory
	5、使用SqlSessionFactory获取SqlSession
	6、使用SqlSession获取mapper
	
二、XML映射配置文件
	properties 属性
	settings 设置
	typeAliases 类型命名
	typeHandlers 类型处理器
	objectFactory 对象工厂
	plugins 插件
	environments 环境
	environment 环境变量
	transactionManager 事务管理器
	dataSource 数据源
	databaseIdProvider 数据库厂商标识
	mappers 映射器	

三、MapperXML文件
	(#{property,javaType=int,jdbcType=NUMERIC})
	1、select元素
	2、insert元素
	3、update元素
	4、delete元素
	5、<selectKey
	  keyProperty="id"
	  resultType="int"
	  order="BEFORE"
	  statementType="PREPARED">
	6、sql元素
	7、<include refid="" />
	8、<resultMap id="detailedBlogResultMap" type="Blog">
		  <!--构造函数-->
		  <constructor>
		    <idArg column="blog_id" javaType="int"/>
		  </constructor>
		  <!--java基本数据类型-->
		  <result property="title" column="blog_title"/>
		  <!--java自定义类型(单个,e:Student)-->
		  <association property="author" javaType="Author">
		    <id property="id" column="author_id"/>
		    <result property="username" column="author_username"/>
		    <result property="password" column="author_password"/>
		    <result property="email" column="author_email"/>
		    <result property="bio" column="author_bio"/>
		    <result property="favouriteSection" column="author_favourite_section"/>
		  </association>
		  <!--java集合,e:List<Student>-->
		  <collection property="posts" ofType="Post">
		    <id property="id" column="post_id"/>
		    <result property="subject" column="post_subject"/>
		    <association property="author" javaType="Author"/>
		    <collection property="comments" ofType="Comment">
		      <id property="id" column="comment_id"/>
		    </collection>
		    <collection property="tags" ofType="Tag" >
		      <id property="id" column="tag_id"/>
		    </collection>
		    <!--鉴别器,类似java的case switch-->
		    <discriminator javaType="int" column="draft">
		      <case value="1" resultType="DraftPost"/>
		    </discriminator>
		  </collection>
	  </resultMap>
	9、<cache>
	
四、动态sql
	1、<if test="title != null">	
	2、choose, when, otherwise
		<select id="findActiveBlogLike" resultType="Blog">
			SELECT * FROM BLOG WHERE state = ‘ACTIVE’
			<choose>
				<when test="title != null"> 
					AND title like #{title}    
				</when>
				<when test="author != null and author.name != null"> 
					AND author_name like #{author.name}    
				</when>
				<otherwise> Your visitors can save your web pages as PDF in one click
					AND featured = 1
				</otherwise>
			</choose>
		</select
	3、trim, where, set 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">  ... </trim>
		<trim prefix="SET"   suffixOverrides=",">  ... </trim>
	4、foreach 
		  <foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
	5、bind
		bind 元素可以从 OGNL 表达式中创建一个变量并将其绑定到上下文。比如
		<select id="selectBlogsLike" resultType="Blog">
			<bind name="pattern" value="'%' + _parameter.getTitle() + '%'" />
			SELECT * FROM BLOG WHERE title LIKE #{pattern}
		</select>

五、积累
	<![CDATA[ ]]> 
	_parpamter.get("0")
	param1
	@param