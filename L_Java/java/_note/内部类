+内部类：
    静态内部类、成员内部类（无static）、局部内部类（本地类）、匿名内部类
+基本概念：
    把类的定义置于外围类的里边。
    能访问其外围类对象的所有成员，而不需要任何特殊条件。
  .this：外围类Name.this，指向外围类对象。
  .new：Parcell.Test test = new Parcell().new Test();
     在拥有外部类之前不可能创建内部类，如果是嵌套类(静态内部类)则不需要。
      内部类向上转型为基类是它的常用方法。
      
+在方法和作用域内的内部类：
      局部内部类:在方法外不可以访问
      匿名内部类：如果定义匿名内部类，并且希望它使用一个在其他外部内定义的对象，那么编译器会要求参数应用final
      嵌套类:有名静态内部类，类似于一个静态方法要创建一个嵌套类的对象，并不需要其外围类的对象
                    不能从嵌套类的对象中，访问非静态的外围了对象
                    普通的内部类不能有static数据和static字段，也不能包含嵌套类，嵌套类则可以有这些
+接口内部类
     放在接口中的内部类  
+普通内部类
    闭包：是一个可调用的对象，它记录了一些信息，这些信息来自于创建它的作用域。
    回调：通过回调，对象能够携带一些信息，这些信息允许它在稍后的某个时刻调用初始的对象。      
      
  