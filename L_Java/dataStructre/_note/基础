+引言
        数据结构是介于数学、计算机硬件和软件三种之间的一门核心课程、
        数据结构课程主要是研究非数值计算的程序设计问题中所出现的计算机操作对象以及它们之间的关系和操作
        学习数据结构的目的是为了了解计算机处理对象的特征，将实际问题中所涉及的处理对象在计算机中表示出来，并对他们进行处理     
+数据结构基本概念和术语
        数据：数据是人们利用文字符号、数字符号以及其他规定的符号对现实世界的事物及其活动所做的描述。
                    在计算机科学中，数据的含义非常广泛，将一切能输入计算机，并被计算机程序处理的信息，包括
                    文字、表格、图像等，都称为数据。
        数据元素：数据元素是组成数据的基本单位。(元素、结点、顶点、记录)在程序中通常把结点作为一个整体进行考虑和处理。由若干个数据项组成。
        数据对象：数据对象是性质相同的数据元素的集合，是数据的一个子集。
        数据结构：是相互间存在一种或多种特定关系的数据元素集合（D,R）
                           集合结构：数据元素间的关系是“属于同一个集合”。集合是元素关系极为松散的一个结构。
                           线性结构：该结构的数据元素之间存在着一对一的关系
                           树形结构：该结构的数据元素之间存在着一对多的关系
                           图形结构：该机构的数据元素之间存在着多对多的关系，图形结构也称为网状结构。
        数据的逻辑结构(面向用户)：是指数据结构中元素之间的逻辑关系，它是从具体问题中抽象出来的数学模型，                      
                            是独立于计算机存储器的(于具体的计算机无关)。可分为：集合结构、线性结构、树形结构和图形结构。
                            表是线性结构(一对一关系)，树(一对多)和图(多对多)是非线性结构。
        数据存储结构(面向计算机)：是数据的逻辑结构在计算机中存储方式。可分为顺序存储和链式存储两种。
                            顺序存储:是把逻辑上相邻的元素存储在物理位置相邻的存储单元中，由此得到的存储方式称为顺序存储结构。
                                             一般通过程序设计语言中的数组实现
                            链式存储：是把逻辑相邻的元素不要求其物理位置相邻，元素间的逻辑关系通过附设的指针字段来表示。
                                               链式存储结构通常借助程序设计语言中的指针来实现。
                             索引存储：在数据文件的基础上增加一个索引文件，通过索引表建立索引，可以将一个顺序表分成几个顺序子表，
                                                其目的是在查询时提高查找效率，避免盲目查找。
                             散列存储：是通过数据元素与存储地址之间建立某种映射关系，使每个数据元素与每个存储地址之间尽量达到一对一的关系。
        数据处理：数据处理是指对数据进行查找、插入、删除、合并、排序、统计以及简单计算等操作过程。
        数据类型：可分为两类。 一类是非结构的原子类型(整型、字符)、另一类是结构型，他可以由多个结构类型组成，并可以分解。
+算法的概念及其特征
        算法的定义：算法就是解决某个问题的方法和步骤的描述。（计算机解决问题的过程）
        算法的组成要素 ：
                          操作：算术运算、关系比较、逻辑运算、数据传输。
                          控制结构：即操作之间的执行顺序，分为顺序结构、选择结构、循环结构。
                          数据结构：算法操作的对象是数据，数据间的逻辑关系、数据的存储方式及处理方式即是数据结构。
        算法的基本性质：又穷性、确定性、可行性、输入性、输出性
+算法设计的要求：正确性、可读性、稳健性、高效率与低存储量
+算法描述方法：自然语言描述、流程图描述、伪代码描述、计算机语言描述
+算法的分析和评价：一般考虑正确性、可维护性、可读性、运算量、占用存储空间
        评价算法的标准：
                            算法实现所耗费的时间
                            算法实现所耗费的存储空间，其中主要考虑辅助存储空间
                            算法应易于理解、易于编码、易于调试
        算法的时间复杂度：
                            一个特定算法工作量的大小，只依赖于问题的规模，
                            算法的时间效率是问题规模的函数,n为问题规模
           target(n)=O(f(n))
        算法的空间复杂度：
            S(n)=O(g(n))
        