package tree;

/**
 * *树、森林和二叉树的转化<br>
 * 1、将树转化为二叉树<br>
 *   树中每个结点最多只有一个最左孩子和一个右邻的兄弟，则：<br>
 *   （1）在所有兄弟结点之间加一连线<br>
 *   （2）对每个结点，除了保留与其长子的连线外，去掉该结点与其孩子的连线<br>
 *   注意：由于树根没有兄弟，故树转化为二叉树后，二叉树的根结点的右子树必为空<br> 
 * 
 * 2、将一个森林转化为二叉树<br>
 * 	 （1）将森林中每棵树变为二叉树；<br>
 * 	 （2）因为转化所得的二叉树的根结点的右子树均为空，故可将各二叉树的根结点视为兄弟从左至右连在一起，就形成了一个二叉树<br>
 * 
 * 3、二叉树到树、森林的转换<br>
 *   把二叉树转换成树和森林的方式是：若结点x是双亲y的左孩子，则把x的右孩子，右孩子的右孩子，...,都与y用连线
 *   连接起来，最后去掉所有双亲到右孩子的连线<br>
 *
 * 
 * *树、森林的遍历<br>
 * 1、树的遍历<br>
 *	  （1）先根遍历<br>
 *       访问根结点；按照从左到右的顺序先根遍历根结点的每一颗子树<br>
 *   （2）后根遍历<br>
 *       按照从左到右的顺序后根遍历根结点的每一颗子树；访问根结点<br>
 *    注意：前序遍历一棵树恰好等价于前序遍历该树对应的二叉树；后续遍历树恰好等价于中序遍历该树的对应的二叉树<br>   
 * 2、森林的遍历<br>
 *   （1）前序遍历<br>
 *       访问森林中第一棵树的根结点；前序遍历第一课树的根结点的子树；前序遍历去掉第一棵树后在子森林<br>
 *   （2）后续遍历<br>
 *   	 后续遍历第一课树的根结点的子树；访问森林中第一棵树的根结点；后续遍历去掉第一棵树后的子森林<br>
 *    注意：前序遍历一棵树恰好等价于前序遍历该森林对应的二叉树；后续遍历树恰好等价于中序遍历该森林的对应的二叉树<br>           
 *          
 * 
 * @author PW 2018/03/16
 *
 */
public class ChangeTree {

}
