package array;

/**
 * 矩阵的压缩 -- 矩阵的压缩存储就是对矩阵的存储采取相同的元素只存储一次，对零值元素不分配存储空间的策略，
 * 压缩存储的矩阵通常是特殊矩阵和稀疏矩阵；
 * 
 * 特殊矩阵 -- 特殊矩阵是指矩阵中有许多值相同的元素或有许多零元素，且值相同的元素或零元素的分布有一定规律，
 * 如三角矩阵、对角矩阵等。一般采用二维数组存储矩阵元素；
 * 
 * *对称矩阵 -- 若（i,j）=(j,i)，则该矩阵为对称矩阵
 * 
 * *三角矩阵 -- 以主对角线划分三角矩阵有上三角和下三角两种；
 * 若一个n阶矩阵A满足条件：下三角[上三角]（不包括对角线）中的数据元素均为常数C或零元素，则分别称为下三角矩阵[上三角矩阵]
 * 
 * *对角矩阵 -- 矩阵中，除了主对角线和主对角线上方或下方若干条对角线上的元素外，其余元素皆为零。即所有的非零元素集中在一对角
 * 线为中心的带状区域中，其中d为半带宽 
 * 
 * 稀疏矩阵 -- 是矩阵中的一种特殊情况，其非零元素的个数远小于零元素的个数。设m行n列的矩阵A含t个非零元素，如果t<<m*n时，则
 * 称A为稀疏矩阵
 * 
 * *三元组表示法 -- 三元组表示法就是在存储非零元素的同时，存储该元素所对应的行下标和列下标，稀疏矩阵中每个非零元素由一个三元组
 * (i, j, n[i,j]) 其中第一个三元组表示矩阵有i行i列n个元素;
 * 
 * *十字链表表示法 -- 对于m*n的稀疏矩阵A，每个非零元素用一个结点表示，每个结点由5个成员:行号（row）、列号（col）和值（value）
 * 列后续引用（down）和行后续引用（right），分别用来连接同列和同行中的下一个非零元素结点。也就是说，稀疏矩阵中同一列的所有非零元素
 * 都通过down连接成一个列链表，同一行的所以非零元素都通过right连接成一个行链表。
 * 
 * @author PW 2018/03/14
 *
 */
public class SymMtx {
	
	/**
	 * 对称矩阵压缩
	 * 压缩后的个数(N代表N阶矩阵):N*(N+1)/2
	 * 
	 */
	public int[] compress(int[][] mex) {
		int n = mex.length;	// 矩阵的大小
		int[] sa = new int[n*(n+1)/2]; // 压缩后的大小
		
		for (int i = 0; i < mex.length; i++) {
			for (int j = 0; j < mex.length; j++) {
				if (i >= j) {
					sa[i*(i+1)/2+j] = mex[i][j]; // 压缩
				}
			}
		}
		return sa;
	}
	
	public void depress() {
		
	}
	
}
