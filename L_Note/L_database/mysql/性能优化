+优化简介
	mysql优化，一方面是找出系统的瓶颈，提高nysql数据库整体的性能；另一方面需要合理的结构
	设计和参数调整，以提高用户操作响应的速度；同时还尽可能节省系统资源，以便系统可以提供更大
	负荷的服务。
	MySql数据库优化是多方面的，原则是减少系统的瓶颈，减少资源的占用，增加系统的反应速度。
	可以使用SHOW STATUS语句查询一些MySql数据库的性能参数。
	SHOW STATUS LIKE 'value';
	value:
		Connections:连接MySql服务器的次数
		Uptime:MySql服务器的上线时间
		Slow_queries:慢查询的次数
		Com_select:查询操作的次数
		Com_insert:插入操作的次数
		Com_uodate:更新操作的次数
		Com_delete:删除操作的次数
+优化查询
	分析查询语句:
		EXPLAIN <SQL语句>
		DESCRIBE
		id:SELECT识别符。这是SELECT的查询序列号
		select_type:表示SELECT语句的查询类型，
			SIMPLE:表示简单的查询，其中不包括连接查询和子查询;
			PRIMARY:表示主查询，或者是最外层的查询语句
			UNION:表示连接查询的第2个或后面的查询语句
			DEPENDENT UNION:连接查询中的第2个或后面的SELECT语句，取决于外面的查询
			UNION RESULT:连接的查询结果
			SUBQUERY:子查询中的第一个SELECT语句
			DEPENDENT SUNQUERY:子查询中的第一个SELECT，取决于外面的查询
			DERIVED:导出表的SELECT(FROM子句的子查询)
		table:表示查询的表
		type:表示表的连接类型(差到优)	
			system:该表是仅有一行的系统表。这是const链接类型的一个特列。
			const:数据表中最多只有一个匹配行，它将在查询开始时被读取，并在余下的查询优化中作为常量对待。
				const查询速度很快，因为他们只读取一次。const用于使用常数值比较PRIMARY KEY或者UNIQUE
				索引的所有部分的场合。
			eq_ref:对于每个来自前面的表的行组合，从该表中读取一行，当一个索引的所有部分豆子啊查询中使用并且索引
				UNIQUE和或PRIMARY KEY时，即可使用这种类型。
			ref:对于来自前面的表的任意行组合，将从表中读取所有匹配的行。这种类型用于索引即不是UNIQUE也不是PRIMARY
				KEY的情况，或者查询中使用了索引列的左子集，集索引中左边的部分列组合。ref可以用于使用=或<=>操作符的
				带索引的列。
			ref_or_null:连接类型如同ref，但是添加了MySql可以专门探索包含NULL值的行。在解决子查询中经常使用该连接
				类型的优化。	
			index_merge:该连接表示使用了索引合并优化方法。在这种情况下，key列包含了使用的索引的清单，key_len包含了
				使用的索引的最长的关键元素。	
			unique_subquery:该类型替换了下面形式的IN查询的ref(value IN(select s1 from t1))	
				是一个索引查询查找函数，可以完全替换子查询，效率更高。
			index_subquery:连接类型类似于unique_subquery,可以替换IN子查询	
			range:只检索给定范围的行，使用一个索引来选择行。key列显示使用了哪个索引。key_len包含所使用索引的最长关键
				元素。
			index:该链接类型与ALL相同，除了只扫描索引数，这通常比ALL快，因为索引文件通常比数据文件小。
			all:对于前面的表的任意行组合，进行完整的表扫描。如果表是第一个没标记const的表，这样不好，并且在其他情况下很
				差。通常可以增加更多的索引来避免使用ALL连接。
		possible_keys:指出MySql能使用哪个索引在该表中查找到行。如果该列是NULL，则没有相关的索引。
			在这种情况下，可以通过检查WHERE子语句看它是否引用某些列或者适合所有的列来提高查询性能，如
			果是这样，可以创建适合的索引来提高查询的性能。
		key:表示查询实际使用到的索引，如果没有选择索引，该列的值为NULL。要想强制MySql使用或忽视possible
			_keys列中的索引，在查询中使用FORCE INDEX、USE INDEX或者IGNORE INDEX。
		key_len:表示MySql选择的索引字段按字节计算的长度，如果键是NULL，则长度为NULL.
			    可以确定MySql将实际使用一个多列索引中的几个字段
		ref:表示使用哪个列或常数与索引一起来查询记录
		rows:显示MySql在表中进行查询时必须检查的行数
		Extra:该列MySql在处理查询时的详细信息	
	索引对查询速度的影响:
		使用LIKE关键字的查询语句中，如果匹配字符串的第一个字符是'%',索引不会起作用。
		对于对列索引，只有查询条件中使用了这些字段中第一个字段时，索引才会被使用。
		查询语句的查询条件中只有OR关键字，且OR前后的两个条件中的列都是索引时，查询才使用索引。
	如果数据量较大，尽量使用连接查询而不是子查询	
+优化数据库结构
	将字段多的表分解成多个表；
	添加中间表；
	增加冗余字段；
	优化插入记录的速度
		禁用索引,禁用唯一性检查，使用批量插入，
		使用LOAD DATA INFILE批量导入，
		分析表、检查表和优化表，
+优化MySql服务器     						
				
		
			
	
	
	
	
	
	
	
			