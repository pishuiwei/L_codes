一、处理图像
	s代表资源文件，
	d代表canvas对象
(1) 加载图像
   	var img = new Image();
	img.src = "yh.jpg";
	$(img).load(function(){
		context.drawImage(img,0,0);//主要代码context.drawImage(img,dx,dy);
	});
	
(2) 调整图像大小
    context.drawImage(img,dx,dy,dw,dh);//主要代码
	
(3) 裁剪图像
     context.drawImage(img,sx,sy,sw,sh,dx,dy,dw,dh);//主要代码
	 
(4) 阴影
    
(5) 平移

(6) 旋转

(7) 访问像素
    var imageData = context.getImageData(x,y,w,h);//要要访问图像的位置和宽高
	var pixel = imageData.data;	//data属性		
	var red = pixel[0];
	
(8) 获取任意点(像素)的rgba
    var width = imageData.width;
	var x = 2;//可以是任意值
	var y = 2;//可以是任意值
	
	//rgb的索引位置
	var pixelRed = ((y-1)*(width*4)) + ((x-1)*4);	//rgb的索引位置
	var pixelGreen = pixelRed+1;
	var pixelBlue = pixelRed+2;
	var pixelAlpha = pixelRed+3;

(9) 从零绘制图像
    1、createImageData()
	
	$(function(){
		var canvas = $(".myCanvas");
		var context = canvas.get(0).getContext("2d");
			
		var imageData = context.createImageData(200,200);
		var pixels = imageData.data;
		
		var numPixels = imageData.width * imageData.height;
		
		for(var i = 0; i < numPixels; i++){
			pixels[i*4] = 255;
			pixels[i*4+1] = 255;
			pixels[i*4+2] = 0;
			pixels[i*4+3] = 255;	
		}
		context.putImageData(imageData,0,0);	
	})
	
	2、随机绘制像素
		pixels[i*4] = Math.floor(Math.random()*255);
		
	3、创建马赛克效果
	   	$(function(){
			var canvas = $(".myCanvas");
			var context = canvas.get(0).getContext("2d");
		
			
			var imageData = context.createImageData(500,500);
			var pixels = imageData.data;
		
			//马赛克块的个数
			var numTileRows = 4;
			var numTileCols = 4;
		
			//马赛克的尺寸
			var tileWidth = imageData.width/numTileCols;
			var tileHeight = imageData.height/numTileRows;
		
		
			for(var r = 0; r < numTileRows; r++){
				for(var c = 0; c < numTileCols; c++){
					//为每个块设置像素的颜色值
					var red = Math.floor(Math.random()*255);
					var green = Math.floor(Math.random()*255);
					var blue = Math.floor(Math.random()*255);
				
					for(var tr = 0;tr < tileHeight;tr++ ){
						for(var tc = 0; tc < tileWidth; tc++){
							var trueX = (c*tileWidth)+tc;
							var trueY = (r*tileHeight)+tr;
						
							var pso = (trueY*(imageData.width*4))+(trueX*4);
							pixels[pso] = red;
							pixels[pso+1] = green;
							pixels[pso+2] = blue;
							pixels[pso+3] = 255;	
					}
				}
			}
		}		
		context.putImageData(imageData,0,0);
	})

(10)基本图像效果
    1、反转颜色
	   255减去现有的颜色值
	  
	2、灰度(将彩色图片变为黑白)
	   var average = (pixels[i*4]+pixels[i*4+1]+plxels[i*4+2])/3;
	   
	3、像素化
       	








	   
	
	
	








