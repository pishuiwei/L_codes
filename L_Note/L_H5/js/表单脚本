+表单的基础知识
	//form属性
	acceptCharset：服务器能够处理的字符集；等价于HTML 中的accept-charset 特性。
	action：接受请求的URL；等价于HTML 中的action 特性。
	elements：表单中所有控件的集合（HTMLCollection）。
	enctype：请求的编码类型；等价于HTML 中的enctype 特性。
	length：表单中控件的数量。
	method：要发送的HTTP 请求类型，通常是"get"或"post"；等价于HTML 的method 特性。
	name：表单的名称；等价于HTML 的name 特性。
	reset()：将所有表单域重置为默认值。
	submit()：提交表单。
	target：用于发送请求和接收响应的窗口名称；等价于HTML 的target 特性。
	//input属性
	disabled：布尔值，表示当前字段是否被禁用。
	form：指向当前字段所属表单的指针；只读。
	name：当前字段的名称。
	readOnly：布尔值，表示当前字段是否只读。
	tabIndex：表示当前字段的切换（tab）序号。
	type：当前字段的类型，如"checkbox"、"radio"，等等。
	value：当前字段将被提交给服务器的值。对文件字段来说，这个属性是只读的，包含着文件在计算机中的路径。	
+文本框脚本
	//表现文本框，必须将<input>元素的type 特性设置为"text
	//属性
	size 可以指定文本框中能够显示的字符数
	maxlength 指定文本框可以接受的最大字符数
	select() 选择文本框中的所有文本
	select事件
	required 必填
	stepUp(5) value加5
	stepDown(10) value加10
	checkValidity() 自动开启检验
	validity 自动开启检验
	pattern="\d+" 输入模式
	novalidate 禁用验证
+选择框脚本
	add(newOption, relOption)：向控件中插入新<option>元素，其位置在相关项（relOption）之前。
	multiple：布尔值，表示是否允许多项选择；等价于HTML 中的multiple 特性。
	options：控件中所有<option>元素的HTMLCollection。
	remove(index)：移除给定位置的选项。
	selectedIndex：基于0 的选中项的索引，如果没有选中项，则值为-1。对于支持多选的控件，只保存选中项中第一项的索引。
	size：选择框中可见的行数；等价于HTML 中的size 特性。
	index：当前选项在options 集合中的索引。
	label：当前选项的标签；等价于HTML 中的label 特性。
	selected：布尔值，表示当前选项是否被选中。将这个属性设置为true 可以选中当前选项。
	text：选项的文本。
	value：选项的值（等价于HTML 中的value 特性）。	
+表单序列化
	function serialize(form){
		var parts = [],
			field = null,
			i,
			len,
			j,
			optLen,
			option,
			optValue;
		for (i=0, len=form.elements.length; i < len; i++){
			field = form.elements[i];
			switch(field.type){
				case "select-one":
				case "select-multiple":
					if (field.name.length){
						for (j=0, optLen = field.options.length; j < optLen; j++){
							option = field.options[j];
							if (option.selected){
								optValue = "";
								if (option.hasAttribute){
									optValue = (option.hasAttribute("value") ?
											option.value : option.text);
								} else {
									optValue = (option.attributes["value"].specified ?
											option.value : option.text);
								}
								parts.push(encodeURIComponent(field.name) + "=" +
										encodeURIComponent(optValue));
							}
						}
					}
					break;
				case undefined: // 字段集
				case "file": // 文件输入
				case "submit": // 提交按钮
				case "reset": // 重置按钮
				case "button": // 自定义按钮
					break;
				case "radio": // 单选按钮
				case "checkbox": // 复选框
					if (!field.checked){
						break;
					}
					/* 执行默认操作 */
				default:
					// 不包含没有名字的表单字段
					if (field.name.length){
						parts.push(encodeURIComponent(field.name) + "=" +
								encodeURIComponent(field.value));
					}
				}
			}
			return parts.join("&");	
	}
+富文本编辑	
	一种是嵌入一个iframe,一种是使用contenteditable><属性
	
