+事件流
	事件冒泡:即事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点（文档）
	事件捕获:与事件冒泡正好相反
	DOM事件流:先事件捕获在事件冒泡
+事件处理程序
	//HTML事件处理程序
	<input type="button" value="Click Me" onclick="alert('Clicked')" />
	//DOM0 级事件处理程序
	btn.onclick = function([event]){
		alert("Clicked");
	};
	//DOM2 级事件处理程序[removeEventListener()]
	btn.addEventListener("click", function([event]){
		alert(this.id);
	}, false
	//IE事件处理程序[detachEvent()]
	btn.attachEvent("onclick", function(){
		alert("Clicked");
	});
+事件对象
	DOM中的事件对象[event]
		bubbles Boolean 只读 表明事件是否冒泡
		cancelable Boolean 只读 表明是否可以取消事件的默认行为
		currentTarget Element 只读 其事件处理程序当前正在处理事件的那个元素
		defaultPrevented Boolean 只读 为true 表示已经调用了preventDefault()（DOM3级事件中新增）
		detail Integer 只读 与事件相关的细节信息
		eventPhase Integer 只读 调用事件处理程序的阶段：1表示捕获阶段，2表示“处于目标”，3表示冒泡阶段
		preventDefault() Function 只读 取消事件的默认行为。如果cancelable是true，则可以使用这个方法
		stopImmediatePropagation() Function 只读 取消事件的进一步捕获或冒泡，同时阻止任何事件处理程序被调用（DOM3级事件中新增）
		stopPropagation() Function 只读 取消事件的进一步捕获或冒泡。如果bubbles为true，则可以使用这个方法
		target Element 只读 事件的目标
		trusted Boolean 只读 为true表示事件是浏览器生成的。为false表示事件是由开发人员通过JavaScript 创建的（DOM3级事件中新增）
		type String 只读 被触发的事件的类型
		view AbstractView 只读 与事件关联的抽象视图。等同于发生事件的window对象
	IE中的事件对象[window.event]	
		cancelBubble Boolean 读/写 默认值为false，但将其设置为true就可以取消事件冒泡（与DOM中的stopPropagation()方法的作用相同）
		returnValue Boolean 读/写 默认值为true，但将其设置为false就可以取消事件的默认行为（与
		DOM中的preventDefault()方法的作用相同）
		srcElement Element 只读 事件的目标（与DOM中的target属性相同）
		type String 只读 被触发的事件的类型
+事件类型
	UI事件,当用户与页面上的元素交互时触发
		load：当页面完全加载后在window 上面触发，当所有框架都加载完毕时在框架集上面触发，当图像
			 加载完毕时在<img>元素上面触发，或者当嵌入的内容加载完毕时在<object>元素上面触发
		unload：当页面完全卸载后在window 上面触发，当所有框架都卸载后在框架集上面触发，或者当嵌
			   入的内容卸载完毕后在<object>元素上面触发。	 
		abort：在用户停止下载过程时，如果嵌入的内容没有加载完，则在<object>元素上面触发。			   
		error：当发生JavaScript 错误时在window 上面触发，当无法加载图像时在<img>元素上面触发，
			   当无法加载嵌入内容时在<object>元素上面触发，或者当有一或多个框架无法加载时在框
		       架集上面触发。		
		select：当用户选择文本框（<input>或<texterea>）中的一或多个字符时触发。
		resize：当窗口或框架的大小变化时在window 或框架上面触发。
		scroll：当用户滚动带滚动条的元素中的内容时，在该元素上面触发。<body>元素中包含所加载页面的滚动条
	焦点事件,当元素获得或失去焦点时触发
		blur：在元素失去焦点时触发。这个事件不会冒泡；所有浏览器都支持它
		focus：在元素获得焦点时触发。这个事件不会冒泡；所有浏览器都支持它
		focusin：在元素获得焦点时触发。这个事件与HTML 事件focus 等价，但它冒泡。支持这个事件的浏览器有IE5.5+、Safari 5.1+、Opera 11.5+和Chrome。
		focusout：在元素失去焦点时触发。这个事件是HTML 事件blur 的通用版本。支持这个事件的浏览器有IE5.5+、Safari 5.1+、Opera 11.5+和Chrome
	鼠标与滚轮事件
		//鼠标事件(event可以获取(clientX,clientY)(pageX,pageY)(screenX,screenX))
		//0 表示主鼠标按钮(左)，1 表示中间的鼠标按钮（鼠标滚轮按钮），2 表示次鼠标按钮(右)
		click：在用户单击主鼠标按钮（一般是左边的按钮）或者按下回车键时触发
		dblclick：在用户双击主鼠标按钮（一般是左边的按钮）时触发
		mousedown：在用户按下了任意鼠标按钮时触发
		mouseenter：在鼠标光标从元素外部首次移动到元素范围之内时触发
		mouseleave：在位于元素上方的鼠标光标移动到元素范围之外时触发
		mousemove：当鼠标指针在元素内部移动时重复地触发
		mouseout：在鼠标指针位于一个元素上方，然后用户将其移入另一个元素时触
		mouseover：在鼠标指针位于一个元素外部，然后用户将其首次移入另一个元素边界之内时触发	
		mouseup：在用户释放鼠标按钮时触发
		//滚轮事件
		mousewheel 鼠标滚轮与页面交互、在垂直方向上滚动页面时，wheelDelta属性(+向上,-向下)
	键盘与文本事件(event对象的keyCode表示键码)
		keydown：当用户按下键盘上的任意键时触发，而且如果按住不放的话，会重复触发此事件
		keypress：当用户按下键盘上的字符键时触发，而且如果按住不放的话，会重复触发此事件。
		keyup：当用户释放键盘上的键时触发。
	复合事件	
		compositionstart：在IME 的文本复合系统打开时触发，表示要开始输入了
		compositionupdate：在向输入字段中插入新字符时触发
		compositionend：在IME 的文本复合系统关闭时触发，表示返回正常键盘输入状态
	变动事件
		DOMSubtreeModified：在DOM 结构中发生任何变化时触发。这个事件在其他任何事件触发后都会触发
		DOMNodeInserted：在一个节点作为子节点被插入到另一个节点中时触发。
		DOMNodeRemoved：在节点从其父节点中被移除时触发。
		DOMNodeInsertedIntoDocument：在一个节点被直接插入文档或通过子树间接插入文档之后触发。这个事件在DOMNodeInserted 之后触发。
		DOMNodeRemovedFromDocument：在一个节点被直接从文档中移除或通过子树间接从文档中移除之前触发。这个事件在DOMNodeRemoved 之后触发。	
		DOMAttrModified：在特性被修改之后触发。
		DOMCharacterDataModified：在文本节点的值发生变化时触发。
	HTML5事件	
	设备事件
	触摸与手势事件
	
	