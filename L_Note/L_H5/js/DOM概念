概念:
	DOM(文档对象模型)是针对HTML和XML文档的一个API(应用程序编程接口).DOM描绘了一个层次化的节
	点树，允许开发人员添加、移除和修改页面的某一部分。DOM脱胎于Netscape及微软公司创始的DHTML
	(动态HTML),但现在它已经成为表现和操作页面标记的真正的跨平台、语言中立的方式。
节点层次:	
	Node类型:
		概念:
			DOM1级定义了一个Node 接口，该接口将由DOM中的所有节点类型实现。这个Node接口在JavaScript
			中是作为Node 类型实现的；除了IE之外，在其他所有浏览器中都可以访问到这个类型。JavaScript中
			的所有节点类型都继承自Node 类型，因此所有节点类型都共享着相同的基本属性和方法。每个节点都有一
			个nodeType属性，用于表明节点的类型。节点类型由Node类型中定义的12个数值常量来表示;
			要了解节点的具体信息，可以使用nodeName和nodeValue这两个属性;
    Document类型:
    	概念:
    		在浏览器中,document对象是HTMLDocument(继承自Document类型)的一个实例，表示整个HTML页面。
    		而且，document对象是window对象的一个属性，因此可以将其作为全局对象来访问
		特性: 
		  	nodeType 的值为9；
			nodeName 的值为"#document"；
			nodeValue 的值为null；
			parentNode 的值为null；
			ownerDocument 的值为null；
			其子节点可能是一个DocumentType（最多一个）、Element（最多一个）、ProcessingInstruction或Comment。
   Element类型:
	   概念:
		   Element类型用于表现XML或HTML元素，提供了对元素标签名、子节点及特性的访问
	   特性:
	    nodeType 的值为1；
	    nodeName 的值为元素的标签名；
	    nodeValue 的值为null；
	    parentNode 可能是Document 或Element；
	    其子节点可能是Element、Text、Comment、ProcessingInstruction、CDATASection或EntityReference。
	Text类型:
		概念:
			文本节点由Text 类型表示，包含的是可以照字面解释的纯文本内容。纯文本中可以包含转义后的
			HTML字符，但不能包含HTML代码
		特性:
		 nodeType 的值为3；
		 nodeName 的值为"#text"；
		 nodeValue 的值为节点所包含的文本；
		 parentNode 是一个Element；
		 不支持（没有）子节点。
		   可以通过nodeValue属性或data属性访问Text节点中包含的文本，这两个属性中包含的值相同。对nodeValue的修改也会通过data反映出来，反之亦然。使用下列方法可以操作节点中的文本。
	Comment类型:
	   概念:
		   表示注解,Comment 类型与Text 类型继承自相同的基类，因此它拥有除splitText()之外的所有字符串操作方法
	   特性:
		   nodeType 的值为8；
		   nodeName 的值为"#comment"；
		   nodeValue 的值是注释的内容；
		   parentNode 可能是Document 或Element；
		   不支持（没有）子节点。
	CDATASection类型:<![CDATA[This is some content.]]>
    	概念:
    	   CDATASection类型只针对基于XML的文档，表示的是CDATA区域。与Comment类似，CDATASection
    	   类型继承自Text类型，因此拥有除splitText()之外的所有字符串操作方法。
    	特性:
			nodeType 的值为4；
			nodeName 的值为"#cdata-section"；
			nodeValue 的值是CDATA区域中的内容；
			parentNode 可能是Document或Element；
			不支持（没有）子节点。
	DocumentType类型(<!DOCTYPE>):
		概念:包含着与文档的doctype 有关的所有信息
		特性:
			nodeType 的值为10；
			nodeName 的值为doctype的名称；
			nodeValue 的值为null；
			parentNode 是Document；
			不支持（没有）子节点。
		属性:
			name name表示文档类型的名称
			entities 是由文档类型描述的实体的NamedNodeMap对象
			notation 是由文档类型描述的符号的NamedNodeMap对象
	DocumentFragment类型:
		概念:
			在所有节点类型中，只有DocumentFragment在文档中没有对应的标记。DOM规定文档片段（document fragment）
			是一种“轻量级”的文档，可以包含和控制节点，但不会像完整的文档那样占用额外的资源
		特性:
			nodeType 的值为11；
			nodeName 的值为"#document-fragment"；
			nodeValue 的值为null；
			parentNode 的值为null；
			子节点可以是Element、ProcessingInstruction、Comment、Text、CDATASection 或 EntityReference。		
	Attr类型:特性就是存在于元素的attributes属性中的节点
		概念:
			元素的特性在DOM 中以Attr 类型来表示。在所有浏览器中（包括IE8），都可以访问Attr类型
			的构造函数和原型。从技术角度讲，特性就是存在于元素的attributes属性中的节点
		特性:	
		   nodeType 的值为2；
			 nodeName 的值是特性的名称；
		   nodeValue 的值是特性的值；
		   parentNode 的值为null；
		   在HTML中不支持子节点；
		   在XML中子节点可以是Text或EntityReference。
