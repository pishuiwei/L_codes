# 阻塞队列概要
        阻塞队列与我们平常接触的普通队列(LinkedList或ArrayList等)的最大不同点，在于阻塞队列给出阻塞添加和阻塞删
        除法。

    阻塞添加
        所谓的阻塞添加是指当阻塞队列元素已满时，队列会阻塞加入元素的线程，直队列元素不满时才重新唤醒线程执行元
        素加入操作。

    阻塞删除
        阻塞删除是指在队列元素为空时，删除队列元素的线程将被阻塞，直到队列不为空再执行删除操作(一般都会返回被删
        除的元素)

# Java中的阻塞队列接口BlockingQueue继承自Queue接口

# 方法分类
    插入方法：
        add(E e) : 添加成功返回true，失败抛IllegalStateException异常
        offer(E e) : 成功返回 true，如果此队列已满，则返回 false。
        put(E e) :将元素插入此队列的尾部，如果该队列已满，则一直阻塞

    删除方法:
        remove(Object o) :移除指定元素,成功返回true，失败返回false
        poll() : 获取并移除此队列的头元素，若队列为空，则返回 null
        take()：获取并移除此队列头元素，若没有元素则一直阻塞。

    检查方法
        element() ：获取但不移除此队列的头元素，没有元素则抛异常
        peek() :获取但不移除此队列的头；若队列为空，则返回 null。


LinkedBlockingQueue
    是一个由链表实现的有界队列阻塞队列，但大小默认值为Integer.MAX_VALUE，所以我们在使用LinkedBlockingQueue时建
    议手动传值，为其提供我们所需的大小，避免队列过大造成机器负载或者内存爆满等情况

   1、LinkedBlockingQueue()
        默认大小为Integer.MAX_VALUE

   2、LinkedBlockingQueue(int capacity)
        创建指定大小为capacity的阻塞队列

   3、LinkedBlockingQueue(Collection<? extends E> c)
        创建大小默认值为Integer.MAX_VALUE的阻塞队列并添加c中的元素到阻塞队列

